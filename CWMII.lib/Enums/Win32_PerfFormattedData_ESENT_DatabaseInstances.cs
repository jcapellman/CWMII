namespace CWMII.lib.Enums {
	public enum Win32_PerfFormattedData_ESENT_DatabaseInstances {
		Caption,
		Description,
		Name,
		Frequency_Object,
		Frequency_PerfTime,
		Frequency_Sys100NS,
		Timestamp_Object,
		Timestamp_PerfTime,
		Timestamp_Sys100NS,
		DatabaseCacheMissAttachedAverageLatency,
		DatabaseCacheMissesPersec,
		DatabaseCachePercentHit,
		DatabaseCachePercentHitUnique,
		DatabaseCacheRequestsPersec,
		DatabaseCacheRequestsPersecUnique,
		DatabaseCacheSizeMB,
		DatabaseMaintenanceDuration,
		DatabaseOldestTransaction,
		DefragmentationTasks,
		DefragmentationTasksPending,
		IODatabaseReadsAttachedAverageLatency,
		IODatabaseReadsAttachedPersec,
		IODatabaseReadsAverageLatency,
		IODatabaseReadsPersec,
		IODatabaseReadsRecoveryAverageLatency,
		IODatabaseReadsRecoveryPersec,
		IODatabaseWritesAttachedAverageLatency,
		IODatabaseWritesAttachedPersec,
		IODatabaseWritesAverageLatency,
		IODatabaseWritesPersec,
		IODatabaseWritesRecoveryAverageLatency,
		IODatabaseWritesRecoveryPersec,
		IOFlushMapWritesAverageLatency,
		IOFlushMapWritesPersec,
		IOLogReadsAverageLatency,
		IOLogReadsPersec,
		IOLogWritesAverageLatency,
		IOLogWritesPersec,
		LogBytesGeneratedPersec,
		LogBytesWritePersec,
		LogCheckpointDepthasaPercentofTarget,
		LogFileCurrentGeneration,
		LogFilesGenerated,
		LogFilesGeneratedPrematurely,
		LogGenerationCheckpointDepth,
		LogGenerationCheckpointDepthMax,
		LogGenerationCheckpointDepthTarget,
		LogGenerationLossResiliencyDepth,
		LogRecordStallsPersec,
		LogThreadsWaiting,
		LogWritesPersec,
		SessionsInUse,
		SessionsPercentUsed,
		StreamingBackupPagesReadPersec,
		TableClosesPersec,
		TableOpenCacheHitsPersec,
		TableOpenCacheMissesPersec,
		TableOpenCachePercentHit,
		TableOpensPersec,
		TablesOpen,
		Versionbucketsallocated
	}

	public static class Win32_PerfFormattedData_ESENT_DatabaseInstancesExtension {
		public static string GetWMIValue(this Win32_PerfFormattedData_ESENT_DatabaseInstances enumOption) => lib.CWMII.GetSingleProperty($"SELECT * FROM Win32_PerfFormattedData_ESENT_DatabaseInstances", enumOption.ToString());
	}
}