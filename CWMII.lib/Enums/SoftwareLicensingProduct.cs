namespace CWMII.lib.Enums {
	public enum SoftwareLicensingProduct {
		ADActivationCsvlkPid,
		ADActivationCsvlkSkuId,
		ADActivationObjectDN,
		ADActivationObjectName,
		ApplicationID,
		AutomaticVMActivationHostDigitalPid2,
		AutomaticVMActivationHostMachineName,
		AutomaticVMActivationLastActivationTime,
		Description,
		DiscoveredKeyManagementServiceMachineIpAddress,
		DiscoveredKeyManagementServiceMachineName,
		DiscoveredKeyManagementServiceMachinePort,
		EvaluationEndDate,
		ExtendedGrace,
		GenuineStatus,
		GracePeriodRemaining,
		IAID,
		ID,
		IsKeyManagementServiceMachine,
		KeyManagementServiceCurrentCount,
		KeyManagementServiceFailedRequests,
		KeyManagementServiceLicensedRequests,
		KeyManagementServiceLookupDomain,
		KeyManagementServiceMachine,
		KeyManagementServiceNonGenuineGraceRequests,
		KeyManagementServiceNotificationRequests,
		KeyManagementServiceOOBGraceRequests,
		KeyManagementServiceOOTGraceRequests,
		KeyManagementServicePort,
		KeyManagementServiceProductKeyID,
		KeyManagementServiceTotalRequests,
		KeyManagementServiceUnlicensedRequests,
		LicenseDependsOn,
		LicenseFamily,
		LicenseIsAddon,
		LicenseStatus,
		LicenseStatusReason,
		MachineURL,
		Name,
		OfflineInstallationId,
		PartialProductKey,
		ProcessorURL,
		ProductKeyChannel,
		ProductKeyID,
		ProductKeyID2,
		ProductKeyURL,
		RemainingAppReArmCount,
		RemainingSkuReArmCount,
		RequiredClientCount,
		TokenActivationAdditionalInfo,
		TokenActivationCertificateThumbprint,
		TokenActivationGrantNumber,
		TokenActivationILID,
		TokenActivationILVID,
		TrustedTime,
		UseLicenseURL,
		ValidationURL,
		VLActivationInterval,
		VLActivationType,
		VLActivationTypeEnabled,
		VLRenewalInterval
	}

	public static class SoftwareLicensingProductExtension {
		public static string GetWMIValue(this SoftwareLicensingProduct enumOption) => lib.CWMII.GetSingleProperty($"SELECT * FROM SoftwareLicensingProduct", enumOption.ToString());
	}
}